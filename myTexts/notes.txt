10/14/21
	I intend to figure out how to spawn 
	creatures tonight, and even attach that
	ability to a weapon. 
	
	Zoo Monster Names:
		Monster_Berserker
		Monster_Grunt
		Monster_Gunner
		Monster_Gladiator
		Monster_Scientist
		Monster_Sentry
		
		Monster_BossBuddy
		Monster_Fatty
		monster_strogg_marine
		monster_network_guardian

	Zoo Guest Names:
		char_marine
		char_marine_tech (optional: _armed)
		char_marine_medic (optional: _armed)
		<you can also add the gun of choice to the end>

10/21/21: 
	Recap from previous week. I should clarified that
	my goal was to figure out how to spawn things
	with a weapon or some sort of activation in the 
	game world that was not console commands. I failed
	but learned a little more about how the game loads 
	things in. I also took a look at some of the maps. 
	Some other ones might be better but that is not a 
	priority at the moment. I am more concerned with the
	deliverables.
	
	Ideas: 
	
	If I can figure out where the hud's health 
	counter	is adjusted in the code, I can use
	that to represent the money and delete the rest of 
	the hud in the GUI editor. 

	If I figure out how the escape button is binded
	to bringing up the pause menu in game I can copy and
	paste an existing menu gui to create my own ingame
	menu. However figuring out how to assign tasks to
	buttons may be a challenge.

10/23/21
	Most commands are numbered seen as numbered impulses,
	found in "UsercmdGen.h". 
	Impulses are taken into idPlayer::PerformImpulse()
	which has a switch statement that executes functions
	based on the impulse.
	
10/27/21
	Quake has so many macros. There are macros that create
	more macros. I am not 100% sure what 
	#define CLASS_PROTOTYPE(classname)
	does. It lists out static and virtual classes that
	also use CLASS_PROTOTYPE. Ugh
	
10/28/21
	Professor explained the CLASS_PROTOTYPE issue. 
	Also the gui code is the key to understanding the button 
	pressing. The gui editor.

	Inside the mainmenu gui is where the game picks the map afer
	the player starts the a new game. Here you can also call 
	any console commands you'd like on game start. Halleluja

	
10/30/21
	I wish I had opened the gui and map codes sooner. It helped put a 
	lot of puzzle pieces together. I added a console command and a key
	action that print out the player location. "gameLocal" is the global
	variable in which most game adjustments can be made, also where you
	can GetLocalPLayer(). I still have not figured out how to call console
	commands from the code, say for an impulse or a gun-fire, but I think
	I can break down how the console command is using the code and just
	rewrite it my own way. I also messed with moving in game objects in 
	the map code. For some reason, at times when moved/rotated objects become
	invisible; this also happens when I try to add new objects. I think
	it is an issue with the textures that are applied to the models. I 
	have not figured out how those interact yet.
	
	Another thing I noticed was that my hud adjustments were not showing
	up in game when I switched the starting map. I found out that in the
	code, during that campaign mission, the player is defined as a strogg
	instead of a marine. When I defined the player as a marine it showed
	the correct hud that I had been messing with.
	Progress is finally being made.

11/1/21 
	< idEntity *newEnt = NULL;
	  gameLocal.SpawnEntityDef( dict, &newEnt ); >
	is the code I believe that specifically spawns the new entity.
	The dict is foramtted as follows:
	{	classname = <string: name of monster>
		angle = <float: direction entity faces?>
		origin = <idVec3: position entity spawns in> 
	}
	I also think the NULL idEntity created is used to get a new memory address.
	
	It took way longer than it should have but I can finally spawn stuff using
	a key or weapon shot. Now I can choose the location and entity of my choice.
		
	In CmdSystem.h some sort of name completion is used for all file names/types. 

	
	I need to figure out if there is a way to spawn inaniment objects.
	I will say that I feel like I am jumping around a lot but I feel like when
	its better to leave and come back when I get stuck than to just sit there.

	So in the map files the map's functions are called throughout like "walker::functionName".
	All map functions are located in pak010.pk4/scripts/maps

	player.cpp has DrawHud(idUserInterface *_hud)
	The only declaration I see is: 
		idUserInterface* GetZoomGui ( void ) const;
	which does not explain where the gui's are being pulled from.
	
11/2/21

	inside hud.gui:
		onNamedEvent functionName { <gui code> }
	inside code:
		gameLocal.GetLocalPlayer()->hud->HandleNamedEvent("functionName");

	
	Where is the gui assigned to the hud variable??
	in player.cpp in spawn function:
		if ( spawnArgs.GetString( "hud", "", temp ) ) {
			hud = uiManager->FindGui( temp, true, false, true );
		} else {
			gameLocal.Warning( "idPlayer::Spawn() - No hud for player." );
		}

	GetString makes temp = "guis/hud.gui"
	but when I put "guis/myHud.gui" it does not work.
	GetString first checks if hud is in a idDict (presumably containing all the guis)
	then it makes it a string. I don't know where that idDict is created, but it
	doesn't matter if I forgo the if statement and ensure I don't get the filename
	wrong: bad practice, I know. I was not really concerned with being able to use
	a hud gui with a different name. I was more concerned with seeing how any gui
	is called and drawn by the game. Now I can make my own menus. Apparantly the way
	the mainmenu/pause menu guis are handled differently?

	walker.script at the bottom is where you thread a function to run when the map starts.
	This is probably whereI will have to spawn guest regularly in a looped thread.

11/3/21

	guest spawn spots:
		-1438 335 -1807
		-1456 1339 -1807
		-1415 2370 -1807
		
	When the map is loading random numbers of zoo guests are spawned one of 3 locations
	They do not targeted by nor target strogg. Gettting them to move around is not yet
	working. The functions available in events.script are limited. 

	events.script allows for gui interaction and onclick interactions. I am considering
	having an AI that you can spawn in to be your research guy. Potentially you can
	open a gui through him. 
	
	All the events in events.script are described in Script_Thread.cpp

	.gui files have a lot of calls like gui::ingame or p_btns::visible. These are not
	functions from other classes they are WindowDef's declared in the same file and
	they are used to refer to their functions and attributes. 
	
	In the guis onMouseEnter and onMouseExit are used for MENU ANIMATIONS!!!
	onAction is the thing that matters. From guis I can use console commands which would 
	help with the buy menu, if I ever get it working. I can pull up a gui like I do with the
	help screen but I don't know how to pull a gui up with buttons and a mouse. With this knowledge
	I just need to figure out how to pull up one of those guis and I can finish at least 
	2 deliverables: research, enclosures, and probably the new user hud.

	onNamedEvent dest_and_curr {
		// 1 = new game
		// 2 = load game
		// 3 = multiplayer
		// 4 = settings
		// 5 = mods
		// 6 = updates
		// 7 = credits
		// 8 = exit
		// 9 = settings_controls_movement
		// 10 = settings_controls_weapons
		// 11 = settings_controls_attack
		// 12 = settings_controls_other
		// 13 = multiplayer_instantaction
		// 14 = multiplayer_gamebrowser
		// 15 = multiplayer_friendslist
		// 16 = multiplayer_joinipaddress
		// 17 = multiplayer_createserver
		// 18 = multiplayer_settings
		// 19 = popup_gamebrowser_filter_options
		// 20 = settings_controls
		// 21 = settings_gameoptions
		// 22 = settings_system
		// 23 = save game
		// 24 = popup_create_advanced_options
		// 25 = popup_defaults
		// 26 = popup_settings_advanced_options
		// 27 = popup_disconnect
		// 28 = load_delete_game
		// 29 = popup_find_player_or_clan
		// 30 = popup_auto_detect_settings
		// 31 = popup_ultra_quality_warning
		// 32 = popup_save_overwrite
		// 33 = popup_create_advanced_banlist
		// 34 = popup_vidsettings_warning
		// 35 = popup_advanced_sound_settings
	}

original box orientation"rotation" "-0.495134 -0.76285 -0.415815 0.857597 -0.505796 -0.0932612 -0.139173 -0.402778 0.904655"

"-704 200 -1856"//EDEL

cage_1 wall : -1313 2856 -2086 
	plate : -1000 3000 -2093
cage_2 wall : -1285 1820 -2065
	plate : -1000 1985 -2093
cage_3 wall : -1328 785 -2099
	plate : -1000 950 -2093
cage_4 wall : -1328 -300 -2099
	plate : -1000 -235 -2093


"0.902875 0.392963 -0.174347 -0.395408 0.918243 0.0219785 0.16873 0.0490944 0.984439"

-1748 2366 -1807













































HELP FOR SHMUCKS:

FIND_DEF_FILES:
	This PC
	Bootcamp
	Program Files (x86)
	Steam
	steamapps
	common
	Quake 4

WHAT_TO_SWAP:
	gamex86.dll 
	from 
		git WIN32 folder  
	to 
		game000.pk4 in myFirstMod folder

